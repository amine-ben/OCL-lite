/**
 * generated by Xtext 2.10.0
 */
package fr.inria.diverse.oCLlite;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see fr.inria.diverse.oCLlite.OCLliteFactory
 * @model kind="package"
 * @generated
 */
public interface OCLlitePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "oCLlite";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.inria.fr/diverse/OCLlite";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "oCLlite";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  OCLlitePackage eINSTANCE = fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl.init();

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.ModuleImpl <em>Module</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.ModuleImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getModule()
   * @generated
   */
  int MODULE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__NAME = 0;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__SOURCE = 1;

  /**
   * The feature id for the '<em><b>Input</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__INPUT = 2;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__IMPORTS = 3;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__ELEMENTS = 4;

  /**
   * The number of structural features of the '<em>Module</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OclLModelImpl <em>Ocl LModel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OclLModelImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLModel()
   * @generated
   */
  int OCL_LMODEL = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Uri</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL__URI = 1;

  /**
   * The number of structural features of the '<em>Ocl LModel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.URI_Impl <em>URI </em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.URI_Impl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getURI_()
   * @generated
   */
  int URI_ = 2;

  /**
   * The feature id for the '<em><b>Scheme</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int URI___SCHEME = 0;

  /**
   * The feature id for the '<em><b>Authority</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int URI___AUTHORITY = 1;

  /**
   * The feature id for the '<em><b>Fragment </b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int URI___FRAGMENT_ = 2;

  /**
   * The number of structural features of the '<em>URI </em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int URI__FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.ImportImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__NAME = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.ModuleElementImpl <em>Module Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.ModuleElementImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getModuleElement()
   * @generated
   */
  int MODULE_ELEMENT = 4;

  /**
   * The number of structural features of the '<em>Module Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE_ELEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.QueryImpl <em>Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.QueryImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getQuery()
   * @generated
   */
  int QUERY = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__NAME = MODULE_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__BODY = MODULE_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FEATURE_COUNT = MODULE_ELEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OclLExpressionImpl <em>Ocl LExpression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OclLExpressionImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLExpression()
   * @generated
   */
  int OCL_LEXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__NAME = 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__VARIABLE = 1;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__IN = 2;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__TARGET = 3;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__MODEL = 4;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION__ELEMENTS = 5;

  /**
   * The number of structural features of the '<em>Ocl LExpression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LEXPRESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.IteratorImpl <em>Iterator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.IteratorImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIterator()
   * @generated
   */
  int ITERATOR = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR__TYPE = 1;

  /**
   * The number of structural features of the '<em>Iterator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.LocalVariableImpl <em>Local Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.LocalVariableImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLocalVariable()
   * @generated
   */
  int LOCAL_VARIABLE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VARIABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VARIABLE__TYPE = 1;

  /**
   * The feature id for the '<em><b>Init Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VARIABLE__INIT_EXP = 2;

  /**
   * The number of structural features of the '<em>Local Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VARIABLE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.CollectionExpImpl <em>Collection Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.CollectionExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getCollectionExp()
   * @generated
   */
  int COLLECTION_EXP = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP__PARTS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Collection Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.BagExpImpl <em>Bag Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.BagExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBagExp()
   * @generated
   */
  int BAG_EXP = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__NAME = COLLECTION_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__VARIABLE = COLLECTION_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__IN = COLLECTION_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__TARGET = COLLECTION_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__MODEL = COLLECTION_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__ELEMENTS = COLLECTION_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP__PARTS = COLLECTION_EXP__PARTS;

  /**
   * The number of structural features of the '<em>Bag Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_EXP_FEATURE_COUNT = COLLECTION_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.SequenceExpImpl <em>Sequence Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.SequenceExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSequenceExp()
   * @generated
   */
  int SEQUENCE_EXP = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__NAME = COLLECTION_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__VARIABLE = COLLECTION_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__IN = COLLECTION_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__TARGET = COLLECTION_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__MODEL = COLLECTION_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__ELEMENTS = COLLECTION_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP__PARTS = COLLECTION_EXP__PARTS;

  /**
   * The number of structural features of the '<em>Sequence Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_EXP_FEATURE_COUNT = COLLECTION_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.SetExpImpl <em>Set Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.SetExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSetExp()
   * @generated
   */
  int SET_EXP = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__NAME = COLLECTION_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__VARIABLE = COLLECTION_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__IN = COLLECTION_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__TARGET = COLLECTION_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__MODEL = COLLECTION_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__ELEMENTS = COLLECTION_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP__PARTS = COLLECTION_EXP__PARTS;

  /**
   * The number of structural features of the '<em>Set Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_EXP_FEATURE_COUNT = COLLECTION_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OrderedSetExpImpl <em>Ordered Set Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OrderedSetExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOrderedSetExp()
   * @generated
   */
  int ORDERED_SET_EXP = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__NAME = COLLECTION_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__VARIABLE = COLLECTION_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__IN = COLLECTION_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__TARGET = COLLECTION_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__MODEL = COLLECTION_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__ELEMENTS = COLLECTION_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP__PARTS = COLLECTION_EXP__PARTS;

  /**
   * The number of structural features of the '<em>Ordered Set Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_EXP_FEATURE_COUNT = COLLECTION_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.MapExpImpl <em>Map Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.MapExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapExp()
   * @generated
   */
  int MAP_EXP = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Map Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP__MAP_ELEMENTS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Map Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.MapElementImpl <em>Map Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.MapElementImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapElement()
   * @generated
   */
  int MAP_ELEMENT = 15;

  /**
   * The feature id for the '<em><b>Key</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_ELEMENT__KEY = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_ELEMENT__VALUE = 1;

  /**
   * The number of structural features of the '<em>Map Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_ELEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.TuplePartImpl <em>Tuple Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.TuplePartImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTuplePart()
   * @generated
   */
  int TUPLE_PART = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART__TYPE = 1;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART__INIT = 2;

  /**
   * The number of structural features of the '<em>Tuple Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.PrimitiveExpImpl <em>Primitive Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.PrimitiveExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getPrimitiveExp()
   * @generated
   */
  int PRIMITIVE_EXP = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The number of structural features of the '<em>Primitive Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.NumberLiteralExpImpl <em>Number Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.NumberLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNumberLiteralExp()
   * @generated
   */
  int NUMBER_LITERAL_EXP = 18;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP__SYMBOL = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.StringLiteralExpImpl <em>String Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.StringLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getStringLiteralExp()
   * @generated
   */
  int STRING_LITERAL_EXP = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Segments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP__SEGMENTS = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.BooleanLiteralExpImpl <em>Boolean Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.BooleanLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBooleanLiteralExp()
   * @generated
   */
  int BOOLEAN_LITERAL_EXP = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP__SYMBOL = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.UnlimitedNaturalLiteralExpImpl <em>Unlimited Natural Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.UnlimitedNaturalLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getUnlimitedNaturalLiteralExp()
   * @generated
   */
  int UNLIMITED_NATURAL_LITERAL_EXP = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The number of structural features of the '<em>Unlimited Natural Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.InvalidLiteralExpImpl <em>Invalid Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.InvalidLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getInvalidLiteralExp()
   * @generated
   */
  int INVALID_LITERAL_EXP = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The number of structural features of the '<em>Invalid Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.NullLiteralExpImpl <em>Null Literal Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.NullLiteralExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNullLiteralExp()
   * @generated
   */
  int NULL_LITERAL_EXP = 23;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__NAME = PRIMITIVE_EXP__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__VARIABLE = PRIMITIVE_EXP__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__IN = PRIMITIVE_EXP__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__TARGET = PRIMITIVE_EXP__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__MODEL = PRIMITIVE_EXP__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP__ELEMENTS = PRIMITIVE_EXP__ELEMENTS;

  /**
   * The number of structural features of the '<em>Null Literal Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP_FEATURE_COUNT = PRIMITIVE_EXP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.IfExpImpl <em>If Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.IfExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIfExp()
   * @generated
   */
  int IF_EXP = 24;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__CONDITION = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__THEN = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>If Then</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__IF_THEN = OCL_LEXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP__ELSE = OCL_LEXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>If Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OclLTypeImpl <em>Ocl LType</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OclLTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLType()
   * @generated
   */
  int OCL_LTYPE = 25;

  /**
   * The number of structural features of the '<em>Ocl LType</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LTYPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OclLModelElementExpImpl <em>Ocl LModel Element Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OclLModelElementExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLModelElementExp()
   * @generated
   */
  int OCL_LMODEL_ELEMENT_EXP = 26;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL_ELEMENT_EXP__MODEL = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL_ELEMENT_EXP__NAME = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Ocl LModel Element Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LMODEL_ELEMENT_EXP_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.EnvTypeImpl <em>Env Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.EnvTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getEnvType()
   * @generated
   */
  int ENV_TYPE = 27;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENV_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Env Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENV_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.LambdaTypeImpl <em>Lambda Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.LambdaTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLambdaType()
   * @generated
   */
  int LAMBDA_TYPE = 28;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Args Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_TYPE__ARGS_TYPES = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_TYPE__RETURN_TYPE = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Lambda Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.MapTypeImpl <em>Map Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.MapTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapType()
   * @generated
   */
  int MAP_TYPE = 29;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Key Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE__KEY_TYPE = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Value Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE__VALUE_TYPE = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Map Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.TupleTypeImpl <em>Tuple Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.TupleTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTupleType()
   * @generated
   */
  int TUPLE_TYPE = 30;

  /**
   * The number of structural features of the '<em>Tuple Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OclLAnyTypeImpl <em>Ocl LAny Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OclLAnyTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLAnyType()
   * @generated
   */
  int OCL_LANY_TYPE = 31;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LANY_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ocl LAny Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OCL_LANY_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.SetTypeImpl <em>Set Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.SetTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSetType()
   * @generated
   */
  int SET_TYPE = 32;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Element Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE__ELEMENT_TYPE = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Set Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.SequenceTypeImpl <em>Sequence Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.SequenceTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSequenceType()
   * @generated
   */
  int SEQUENCE_TYPE = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Element Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE__ELEMENT_TYPE = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sequence Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OrderedSetTypeImpl <em>Ordered Set Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OrderedSetTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOrderedSetType()
   * @generated
   */
  int ORDERED_SET_TYPE = 34;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Element Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_TYPE__ELEMENT_TYPE = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Ordered Set Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.BagTypeImpl <em>Bag Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.BagTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBagType()
   * @generated
   */
  int BAG_TYPE = 35;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Element Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_TYPE__ELEMENT_TYPE = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Bag Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BAG_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.RealTypeImpl <em>Real Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.RealTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getRealType()
   * @generated
   */
  int REAL_TYPE = 36;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Real Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.IntegerTypeImpl <em>Integer Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.IntegerTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIntegerType()
   * @generated
   */
  int INTEGER_TYPE = 37;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Integer Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.BooleanTypeImpl <em>Boolean Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.BooleanTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBooleanType()
   * @generated
   */
  int BOOLEAN_TYPE = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.StringTypeImpl <em>String Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.StringTypeImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getStringType()
   * @generated
   */
  int STRING_TYPE = 39;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_TYPE__NAME = OCL_LTYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_TYPE_FEATURE_COUNT = OCL_LTYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.BoolOpCallExpImpl <em>Bool Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.BoolOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBoolOpCallExp()
   * @generated
   */
  int BOOL_OP_CALL_EXP = 40;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.EqOpCallExpImpl <em>Eq Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.EqOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getEqOpCallExp()
   * @generated
   */
  int EQ_OP_CALL_EXP = 41;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Eq Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.ComOpCallExpImpl <em>Com Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.ComOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getComOpCallExp()
   * @generated
   */
  int COM_OP_CALL_EXP = 42;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Com Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COM_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.AddOpCallExpImpl <em>Add Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.AddOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getAddOpCallExp()
   * @generated
   */
  int ADD_OP_CALL_EXP = 43;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Add Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.MulOpCallExpImpl <em>Mul Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.MulOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMulOpCallExp()
   * @generated
   */
  int MUL_OP_CALL_EXP = 44;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Mul Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.NavigationExpImpl <em>Navigation Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.NavigationExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNavigationExp()
   * @generated
   */
  int NAVIGATION_EXP = 45;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP__SOURCE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Navigation Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.CollectionOpCallExpImpl <em>Collection Op Call Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.CollectionOpCallExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getCollectionOpCallExp()
   * @generated
   */
  int COLLECTION_OP_CALL_EXP = 46;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP__ARGUMENTS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Collection Op Call Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_OP_CALL_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.IterateExpImpl <em>Iterate Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.IterateExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIterateExp()
   * @generated
   */
  int ITERATE_EXP = 47;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Iterators</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__ITERATORS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Result</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__RESULT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP__BODY = OCL_LEXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Iterate Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATE_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.IteratorExpImpl <em>Iterator Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.IteratorExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIteratorExp()
   * @generated
   */
  int ITERATOR_EXP = 48;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Iterators</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__ITERATORS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP__BODY = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Iterator Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITERATOR_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.NavigationOrAttributeCallImpl <em>Navigation Or Attribute Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.NavigationOrAttributeCallImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNavigationOrAttributeCall()
   * @generated
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL = 49;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL__FEATURE = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Navigation Or Attribute Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OR_ATTRIBUTE_CALL_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.OperationCallImpl <em>Operation Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.OperationCallImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOperationCall()
   * @generated
   */
  int OPERATION_CALL = 50;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL__ARGUMENTS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operation Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.LambdaExpImpl <em>Lambda Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.LambdaExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLambdaExp()
   * @generated
   */
  int LAMBDA_EXP = 51;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP__EXPRESSION = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Lambda Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.TupleExpImpl <em>Tuple Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.TupleExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTupleExp()
   * @generated
   */
  int TUPLE_EXP = 52;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP__PARTS = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tuple Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.ElseIfThenExpImpl <em>Else If Then Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.ElseIfThenExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getElseIfThenExp()
   * @generated
   */
  int ELSE_IF_THEN_EXP = 53;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__CONDITION = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP__THEN = OCL_LEXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Else If Then Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_THEN_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.SelfExpImpl <em>Self Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.SelfExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSelfExp()
   * @generated
   */
  int SELF_EXP = 54;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The number of structural features of the '<em>Self Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.oCLlite.impl.NestedExpImpl <em>Nested Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.oCLlite.impl.NestedExpImpl
   * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNestedExp()
   * @generated
   */
  int NESTED_EXP = 55;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__NAME = OCL_LEXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__VARIABLE = OCL_LEXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>In</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__IN = OCL_LEXPRESSION__IN;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__TARGET = OCL_LEXPRESSION__TARGET;

  /**
   * The feature id for the '<em><b>Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__MODEL = OCL_LEXPRESSION__MODEL;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__ELEMENTS = OCL_LEXPRESSION__ELEMENTS;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP__EXP = OCL_LEXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Nested Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP_FEATURE_COUNT = OCL_LEXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.Module <em>Module</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Module</em>'.
   * @see fr.inria.diverse.oCLlite.Module
   * @generated
   */
  EClass getModule();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.Module#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.Module#getName()
   * @see #getModule()
   * @generated
   */
  EAttribute getModule_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.Module#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.Module#getSource()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Source();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.Module#getInput <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Input</em>'.
   * @see fr.inria.diverse.oCLlite.Module#getInput()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Input();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.Module#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see fr.inria.diverse.oCLlite.Module#getImports()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.Module#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see fr.inria.diverse.oCLlite.Module#getElements()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Elements();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OclLModel <em>Ocl LModel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ocl LModel</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModel
   * @generated
   */
  EClass getOclLModel();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.OclLModel#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModel#getName()
   * @see #getOclLModel()
   * @generated
   */
  EAttribute getOclLModel_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLModel#getUri <em>Uri</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Uri</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModel#getUri()
   * @see #getOclLModel()
   * @generated
   */
  EReference getOclLModel_Uri();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.URI_ <em>URI </em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>URI </em>'.
   * @see fr.inria.diverse.oCLlite.URI_
   * @generated
   */
  EClass getURI_();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.URI_#getScheme <em>Scheme</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scheme</em>'.
   * @see fr.inria.diverse.oCLlite.URI_#getScheme()
   * @see #getURI_()
   * @generated
   */
  EAttribute getURI__Scheme();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.URI_#getAuthority <em>Authority</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Authority</em>'.
   * @see fr.inria.diverse.oCLlite.URI_#getAuthority()
   * @see #getURI_()
   * @generated
   */
  EAttribute getURI__Authority();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.URI_#getFragment_ <em>Fragment </em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fragment </em>'.
   * @see fr.inria.diverse.oCLlite.URI_#getFragment_()
   * @see #getURI_()
   * @generated
   */
  EAttribute getURI__Fragment_();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see fr.inria.diverse.oCLlite.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.Import#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.Import#getName()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.ModuleElement <em>Module Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Module Element</em>'.
   * @see fr.inria.diverse.oCLlite.ModuleElement
   * @generated
   */
  EClass getModuleElement();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.Query <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query</em>'.
   * @see fr.inria.diverse.oCLlite.Query
   * @generated
   */
  EClass getQuery();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.Query#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.Query#getName()
   * @see #getQuery()
   * @generated
   */
  EAttribute getQuery_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.Query#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see fr.inria.diverse.oCLlite.Query#getBody()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_Body();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OclLExpression <em>Ocl LExpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ocl LExpression</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression
   * @generated
   */
  EClass getOclLExpression();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.OclLExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getName()
   * @see #getOclLExpression()
   * @generated
   */
  EAttribute getOclLExpression_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLExpression#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getVariable()
   * @see #getOclLExpression()
   * @generated
   */
  EReference getOclLExpression_Variable();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLExpression#getIn <em>In</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>In</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getIn()
   * @see #getOclLExpression()
   * @generated
   */
  EReference getOclLExpression_In();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLExpression#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Target</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getTarget()
   * @see #getOclLExpression()
   * @generated
   */
  EReference getOclLExpression_Target();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLExpression#getModel <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Model</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getModel()
   * @see #getOclLExpression()
   * @generated
   */
  EReference getOclLExpression_Model();

  /**
   * Returns the meta object for the attribute list '{@link fr.inria.diverse.oCLlite.OclLExpression#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Elements</em>'.
   * @see fr.inria.diverse.oCLlite.OclLExpression#getElements()
   * @see #getOclLExpression()
   * @generated
   */
  EAttribute getOclLExpression_Elements();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.Iterator <em>Iterator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Iterator</em>'.
   * @see fr.inria.diverse.oCLlite.Iterator
   * @generated
   */
  EClass getIterator();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.Iterator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.Iterator#getName()
   * @see #getIterator()
   * @generated
   */
  EAttribute getIterator_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.Iterator#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see fr.inria.diverse.oCLlite.Iterator#getType()
   * @see #getIterator()
   * @generated
   */
  EReference getIterator_Type();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.LocalVariable <em>Local Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local Variable</em>'.
   * @see fr.inria.diverse.oCLlite.LocalVariable
   * @generated
   */
  EClass getLocalVariable();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.LocalVariable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.LocalVariable#getName()
   * @see #getLocalVariable()
   * @generated
   */
  EAttribute getLocalVariable_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.LocalVariable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see fr.inria.diverse.oCLlite.LocalVariable#getType()
   * @see #getLocalVariable()
   * @generated
   */
  EReference getLocalVariable_Type();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.LocalVariable#getInitExp <em>Init Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init Exp</em>'.
   * @see fr.inria.diverse.oCLlite.LocalVariable#getInitExp()
   * @see #getLocalVariable()
   * @generated
   */
  EReference getLocalVariable_InitExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.CollectionExp <em>Collection Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Exp</em>'.
   * @see fr.inria.diverse.oCLlite.CollectionExp
   * @generated
   */
  EClass getCollectionExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.CollectionExp#getParts <em>Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parts</em>'.
   * @see fr.inria.diverse.oCLlite.CollectionExp#getParts()
   * @see #getCollectionExp()
   * @generated
   */
  EReference getCollectionExp_Parts();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.BagExp <em>Bag Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bag Exp</em>'.
   * @see fr.inria.diverse.oCLlite.BagExp
   * @generated
   */
  EClass getBagExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.SequenceExp <em>Sequence Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Exp</em>'.
   * @see fr.inria.diverse.oCLlite.SequenceExp
   * @generated
   */
  EClass getSequenceExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.SetExp <em>Set Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Exp</em>'.
   * @see fr.inria.diverse.oCLlite.SetExp
   * @generated
   */
  EClass getSetExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OrderedSetExp <em>Ordered Set Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ordered Set Exp</em>'.
   * @see fr.inria.diverse.oCLlite.OrderedSetExp
   * @generated
   */
  EClass getOrderedSetExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.MapExp <em>Map Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Exp</em>'.
   * @see fr.inria.diverse.oCLlite.MapExp
   * @generated
   */
  EClass getMapExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.MapExp#getMapElements <em>Map Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Map Elements</em>'.
   * @see fr.inria.diverse.oCLlite.MapExp#getMapElements()
   * @see #getMapExp()
   * @generated
   */
  EReference getMapExp_MapElements();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.MapElement <em>Map Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Element</em>'.
   * @see fr.inria.diverse.oCLlite.MapElement
   * @generated
   */
  EClass getMapElement();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.MapElement#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Key</em>'.
   * @see fr.inria.diverse.oCLlite.MapElement#getKey()
   * @see #getMapElement()
   * @generated
   */
  EReference getMapElement_Key();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.MapElement#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see fr.inria.diverse.oCLlite.MapElement#getValue()
   * @see #getMapElement()
   * @generated
   */
  EReference getMapElement_Value();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.TuplePart <em>Tuple Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Part</em>'.
   * @see fr.inria.diverse.oCLlite.TuplePart
   * @generated
   */
  EClass getTuplePart();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.TuplePart#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.TuplePart#getName()
   * @see #getTuplePart()
   * @generated
   */
  EAttribute getTuplePart_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.TuplePart#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see fr.inria.diverse.oCLlite.TuplePart#getType()
   * @see #getTuplePart()
   * @generated
   */
  EReference getTuplePart_Type();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.TuplePart#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see fr.inria.diverse.oCLlite.TuplePart#getInit()
   * @see #getTuplePart()
   * @generated
   */
  EReference getTuplePart_Init();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.PrimitiveExp <em>Primitive Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primitive Exp</em>'.
   * @see fr.inria.diverse.oCLlite.PrimitiveExp
   * @generated
   */
  EClass getPrimitiveExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.NumberLiteralExp <em>Number Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.NumberLiteralExp
   * @generated
   */
  EClass getNumberLiteralExp();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.NumberLiteralExp#getSymbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol</em>'.
   * @see fr.inria.diverse.oCLlite.NumberLiteralExp#getSymbol()
   * @see #getNumberLiteralExp()
   * @generated
   */
  EAttribute getNumberLiteralExp_Symbol();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.StringLiteralExp <em>String Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.StringLiteralExp
   * @generated
   */
  EClass getStringLiteralExp();

  /**
   * Returns the meta object for the attribute list '{@link fr.inria.diverse.oCLlite.StringLiteralExp#getSegments <em>Segments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Segments</em>'.
   * @see fr.inria.diverse.oCLlite.StringLiteralExp#getSegments()
   * @see #getStringLiteralExp()
   * @generated
   */
  EAttribute getStringLiteralExp_Segments();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.BooleanLiteralExp <em>Boolean Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.BooleanLiteralExp
   * @generated
   */
  EClass getBooleanLiteralExp();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.BooleanLiteralExp#getSymbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol</em>'.
   * @see fr.inria.diverse.oCLlite.BooleanLiteralExp#getSymbol()
   * @see #getBooleanLiteralExp()
   * @generated
   */
  EAttribute getBooleanLiteralExp_Symbol();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.UnlimitedNaturalLiteralExp <em>Unlimited Natural Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unlimited Natural Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.UnlimitedNaturalLiteralExp
   * @generated
   */
  EClass getUnlimitedNaturalLiteralExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.InvalidLiteralExp <em>Invalid Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invalid Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.InvalidLiteralExp
   * @generated
   */
  EClass getInvalidLiteralExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.NullLiteralExp <em>Null Literal Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Null Literal Exp</em>'.
   * @see fr.inria.diverse.oCLlite.NullLiteralExp
   * @generated
   */
  EClass getNullLiteralExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.IfExp <em>If Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Exp</em>'.
   * @see fr.inria.diverse.oCLlite.IfExp
   * @generated
   */
  EClass getIfExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IfExp#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see fr.inria.diverse.oCLlite.IfExp#getCondition()
   * @see #getIfExp()
   * @generated
   */
  EReference getIfExp_Condition();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IfExp#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see fr.inria.diverse.oCLlite.IfExp#getThen()
   * @see #getIfExp()
   * @generated
   */
  EReference getIfExp_Then();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.IfExp#getIfThen <em>If Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>If Then</em>'.
   * @see fr.inria.diverse.oCLlite.IfExp#getIfThen()
   * @see #getIfExp()
   * @generated
   */
  EReference getIfExp_IfThen();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IfExp#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see fr.inria.diverse.oCLlite.IfExp#getElse()
   * @see #getIfExp()
   * @generated
   */
  EReference getIfExp_Else();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OclLType <em>Ocl LType</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ocl LType</em>'.
   * @see fr.inria.diverse.oCLlite.OclLType
   * @generated
   */
  EClass getOclLType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OclLModelElementExp <em>Ocl LModel Element Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ocl LModel Element Exp</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModelElementExp
   * @generated
   */
  EClass getOclLModelElementExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OclLModelElementExp#getModel <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Model</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModelElementExp#getModel()
   * @see #getOclLModelElementExp()
   * @generated
   */
  EReference getOclLModelElementExp_Model();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.OclLModelElementExp#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.OclLModelElementExp#getName()
   * @see #getOclLModelElementExp()
   * @generated
   */
  EAttribute getOclLModelElementExp_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.EnvType <em>Env Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Env Type</em>'.
   * @see fr.inria.diverse.oCLlite.EnvType
   * @generated
   */
  EClass getEnvType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.EnvType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.EnvType#getName()
   * @see #getEnvType()
   * @generated
   */
  EAttribute getEnvType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.LambdaType <em>Lambda Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lambda Type</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaType
   * @generated
   */
  EClass getLambdaType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.LambdaType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaType#getName()
   * @see #getLambdaType()
   * @generated
   */
  EAttribute getLambdaType_Name();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.LambdaType#getArgsTypes <em>Args Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args Types</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaType#getArgsTypes()
   * @see #getLambdaType()
   * @generated
   */
  EReference getLambdaType_ArgsTypes();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.LambdaType#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaType#getReturnType()
   * @see #getLambdaType()
   * @generated
   */
  EReference getLambdaType_ReturnType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.MapType <em>Map Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Type</em>'.
   * @see fr.inria.diverse.oCLlite.MapType
   * @generated
   */
  EClass getMapType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.MapType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.MapType#getName()
   * @see #getMapType()
   * @generated
   */
  EAttribute getMapType_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.MapType#getKeyType <em>Key Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Key Type</em>'.
   * @see fr.inria.diverse.oCLlite.MapType#getKeyType()
   * @see #getMapType()
   * @generated
   */
  EReference getMapType_KeyType();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.MapType#getValueType <em>Value Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value Type</em>'.
   * @see fr.inria.diverse.oCLlite.MapType#getValueType()
   * @see #getMapType()
   * @generated
   */
  EReference getMapType_ValueType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.TupleType <em>Tuple Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Type</em>'.
   * @see fr.inria.diverse.oCLlite.TupleType
   * @generated
   */
  EClass getTupleType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OclLAnyType <em>Ocl LAny Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ocl LAny Type</em>'.
   * @see fr.inria.diverse.oCLlite.OclLAnyType
   * @generated
   */
  EClass getOclLAnyType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.OclLAnyType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.OclLAnyType#getName()
   * @see #getOclLAnyType()
   * @generated
   */
  EAttribute getOclLAnyType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.SetType <em>Set Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Type</em>'.
   * @see fr.inria.diverse.oCLlite.SetType
   * @generated
   */
  EClass getSetType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.SetType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.SetType#getName()
   * @see #getSetType()
   * @generated
   */
  EAttribute getSetType_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.SetType#getElementType <em>Element Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element Type</em>'.
   * @see fr.inria.diverse.oCLlite.SetType#getElementType()
   * @see #getSetType()
   * @generated
   */
  EReference getSetType_ElementType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.SequenceType <em>Sequence Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Type</em>'.
   * @see fr.inria.diverse.oCLlite.SequenceType
   * @generated
   */
  EClass getSequenceType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.SequenceType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.SequenceType#getName()
   * @see #getSequenceType()
   * @generated
   */
  EAttribute getSequenceType_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.SequenceType#getElementType <em>Element Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element Type</em>'.
   * @see fr.inria.diverse.oCLlite.SequenceType#getElementType()
   * @see #getSequenceType()
   * @generated
   */
  EReference getSequenceType_ElementType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OrderedSetType <em>Ordered Set Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ordered Set Type</em>'.
   * @see fr.inria.diverse.oCLlite.OrderedSetType
   * @generated
   */
  EClass getOrderedSetType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.OrderedSetType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.OrderedSetType#getName()
   * @see #getOrderedSetType()
   * @generated
   */
  EAttribute getOrderedSetType_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.OrderedSetType#getElementType <em>Element Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element Type</em>'.
   * @see fr.inria.diverse.oCLlite.OrderedSetType#getElementType()
   * @see #getOrderedSetType()
   * @generated
   */
  EReference getOrderedSetType_ElementType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.BagType <em>Bag Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bag Type</em>'.
   * @see fr.inria.diverse.oCLlite.BagType
   * @generated
   */
  EClass getBagType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.BagType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.BagType#getName()
   * @see #getBagType()
   * @generated
   */
  EAttribute getBagType_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.BagType#getElementType <em>Element Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element Type</em>'.
   * @see fr.inria.diverse.oCLlite.BagType#getElementType()
   * @see #getBagType()
   * @generated
   */
  EReference getBagType_ElementType();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.RealType <em>Real Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Real Type</em>'.
   * @see fr.inria.diverse.oCLlite.RealType
   * @generated
   */
  EClass getRealType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.RealType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.RealType#getName()
   * @see #getRealType()
   * @generated
   */
  EAttribute getRealType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.IntegerType <em>Integer Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Integer Type</em>'.
   * @see fr.inria.diverse.oCLlite.IntegerType
   * @generated
   */
  EClass getIntegerType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.IntegerType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.IntegerType#getName()
   * @see #getIntegerType()
   * @generated
   */
  EAttribute getIntegerType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.BooleanType <em>Boolean Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Type</em>'.
   * @see fr.inria.diverse.oCLlite.BooleanType
   * @generated
   */
  EClass getBooleanType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.BooleanType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.BooleanType#getName()
   * @see #getBooleanType()
   * @generated
   */
  EAttribute getBooleanType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.StringType <em>String Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Type</em>'.
   * @see fr.inria.diverse.oCLlite.StringType
   * @generated
   */
  EClass getStringType();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.StringType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.oCLlite.StringType#getName()
   * @see #getStringType()
   * @generated
   */
  EAttribute getStringType_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.BoolOpCallExp <em>Bool Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.BoolOpCallExp
   * @generated
   */
  EClass getBoolOpCallExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.BoolOpCallExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.BoolOpCallExp#getSource()
   * @see #getBoolOpCallExp()
   * @generated
   */
  EReference getBoolOpCallExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.EqOpCallExp <em>Eq Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Eq Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.EqOpCallExp
   * @generated
   */
  EClass getEqOpCallExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.EqOpCallExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.EqOpCallExp#getSource()
   * @see #getEqOpCallExp()
   * @generated
   */
  EReference getEqOpCallExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.ComOpCallExp <em>Com Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Com Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.ComOpCallExp
   * @generated
   */
  EClass getComOpCallExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.ComOpCallExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.ComOpCallExp#getSource()
   * @see #getComOpCallExp()
   * @generated
   */
  EReference getComOpCallExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.AddOpCallExp <em>Add Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.AddOpCallExp
   * @generated
   */
  EClass getAddOpCallExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.AddOpCallExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.AddOpCallExp#getSource()
   * @see #getAddOpCallExp()
   * @generated
   */
  EReference getAddOpCallExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.MulOpCallExp <em>Mul Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mul Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.MulOpCallExp
   * @generated
   */
  EClass getMulOpCallExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.MulOpCallExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.MulOpCallExp#getSource()
   * @see #getMulOpCallExp()
   * @generated
   */
  EReference getMulOpCallExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.NavigationExp <em>Navigation Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Navigation Exp</em>'.
   * @see fr.inria.diverse.oCLlite.NavigationExp
   * @generated
   */
  EClass getNavigationExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.NavigationExp#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see fr.inria.diverse.oCLlite.NavigationExp#getSource()
   * @see #getNavigationExp()
   * @generated
   */
  EReference getNavigationExp_Source();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.CollectionOpCallExp <em>Collection Op Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Op Call Exp</em>'.
   * @see fr.inria.diverse.oCLlite.CollectionOpCallExp
   * @generated
   */
  EClass getCollectionOpCallExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.CollectionOpCallExp#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Arguments</em>'.
   * @see fr.inria.diverse.oCLlite.CollectionOpCallExp#getArguments()
   * @see #getCollectionOpCallExp()
   * @generated
   */
  EReference getCollectionOpCallExp_Arguments();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.IterateExp <em>Iterate Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Iterate Exp</em>'.
   * @see fr.inria.diverse.oCLlite.IterateExp
   * @generated
   */
  EClass getIterateExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.IterateExp#getIterators <em>Iterators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Iterators</em>'.
   * @see fr.inria.diverse.oCLlite.IterateExp#getIterators()
   * @see #getIterateExp()
   * @generated
   */
  EReference getIterateExp_Iterators();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IterateExp#getResult <em>Result</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Result</em>'.
   * @see fr.inria.diverse.oCLlite.IterateExp#getResult()
   * @see #getIterateExp()
   * @generated
   */
  EReference getIterateExp_Result();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IterateExp#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see fr.inria.diverse.oCLlite.IterateExp#getBody()
   * @see #getIterateExp()
   * @generated
   */
  EReference getIterateExp_Body();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.IteratorExp <em>Iterator Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Iterator Exp</em>'.
   * @see fr.inria.diverse.oCLlite.IteratorExp
   * @generated
   */
  EClass getIteratorExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.IteratorExp#getIterators <em>Iterators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Iterators</em>'.
   * @see fr.inria.diverse.oCLlite.IteratorExp#getIterators()
   * @see #getIteratorExp()
   * @generated
   */
  EReference getIteratorExp_Iterators();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.IteratorExp#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see fr.inria.diverse.oCLlite.IteratorExp#getBody()
   * @see #getIteratorExp()
   * @generated
   */
  EReference getIteratorExp_Body();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.NavigationOrAttributeCall <em>Navigation Or Attribute Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Navigation Or Attribute Call</em>'.
   * @see fr.inria.diverse.oCLlite.NavigationOrAttributeCall
   * @generated
   */
  EClass getNavigationOrAttributeCall();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.oCLlite.NavigationOrAttributeCall#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see fr.inria.diverse.oCLlite.NavigationOrAttributeCall#getFeature()
   * @see #getNavigationOrAttributeCall()
   * @generated
   */
  EAttribute getNavigationOrAttributeCall_Feature();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.OperationCall <em>Operation Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Call</em>'.
   * @see fr.inria.diverse.oCLlite.OperationCall
   * @generated
   */
  EClass getOperationCall();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.OperationCall#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Arguments</em>'.
   * @see fr.inria.diverse.oCLlite.OperationCall#getArguments()
   * @see #getOperationCall()
   * @generated
   */
  EReference getOperationCall_Arguments();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.LambdaExp <em>Lambda Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lambda Exp</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaExp
   * @generated
   */
  EClass getLambdaExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.LambdaExp#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see fr.inria.diverse.oCLlite.LambdaExp#getExpression()
   * @see #getLambdaExp()
   * @generated
   */
  EReference getLambdaExp_Expression();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.TupleExp <em>Tuple Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Exp</em>'.
   * @see fr.inria.diverse.oCLlite.TupleExp
   * @generated
   */
  EClass getTupleExp();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.oCLlite.TupleExp#getParts <em>Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parts</em>'.
   * @see fr.inria.diverse.oCLlite.TupleExp#getParts()
   * @see #getTupleExp()
   * @generated
   */
  EReference getTupleExp_Parts();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.ElseIfThenExp <em>Else If Then Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else If Then Exp</em>'.
   * @see fr.inria.diverse.oCLlite.ElseIfThenExp
   * @generated
   */
  EClass getElseIfThenExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.ElseIfThenExp#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see fr.inria.diverse.oCLlite.ElseIfThenExp#getCondition()
   * @see #getElseIfThenExp()
   * @generated
   */
  EReference getElseIfThenExp_Condition();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.ElseIfThenExp#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see fr.inria.diverse.oCLlite.ElseIfThenExp#getThen()
   * @see #getElseIfThenExp()
   * @generated
   */
  EReference getElseIfThenExp_Then();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.SelfExp <em>Self Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Self Exp</em>'.
   * @see fr.inria.diverse.oCLlite.SelfExp
   * @generated
   */
  EClass getSelfExp();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.oCLlite.NestedExp <em>Nested Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nested Exp</em>'.
   * @see fr.inria.diverse.oCLlite.NestedExp
   * @generated
   */
  EClass getNestedExp();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.oCLlite.NestedExp#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see fr.inria.diverse.oCLlite.NestedExp#getExp()
   * @see #getNestedExp()
   * @generated
   */
  EReference getNestedExp_Exp();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  OCLliteFactory getOCLliteFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.ModuleImpl <em>Module</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.ModuleImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getModule()
     * @generated
     */
    EClass MODULE = eINSTANCE.getModule();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODULE__NAME = eINSTANCE.getModule_Name();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__SOURCE = eINSTANCE.getModule_Source();

    /**
     * The meta object literal for the '<em><b>Input</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__INPUT = eINSTANCE.getModule_Input();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__IMPORTS = eINSTANCE.getModule_Imports();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__ELEMENTS = eINSTANCE.getModule_Elements();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OclLModelImpl <em>Ocl LModel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OclLModelImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLModel()
     * @generated
     */
    EClass OCL_LMODEL = eINSTANCE.getOclLModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OCL_LMODEL__NAME = eINSTANCE.getOclLModel_Name();

    /**
     * The meta object literal for the '<em><b>Uri</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LMODEL__URI = eINSTANCE.getOclLModel_Uri();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.URI_Impl <em>URI </em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.URI_Impl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getURI_()
     * @generated
     */
    EClass URI_ = eINSTANCE.getURI_();

    /**
     * The meta object literal for the '<em><b>Scheme</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute URI___SCHEME = eINSTANCE.getURI__Scheme();

    /**
     * The meta object literal for the '<em><b>Authority</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute URI___AUTHORITY = eINSTANCE.getURI__Authority();

    /**
     * The meta object literal for the '<em><b>Fragment </b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute URI___FRAGMENT_ = eINSTANCE.getURI__Fragment_();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.ImportImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__NAME = eINSTANCE.getImport_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.ModuleElementImpl <em>Module Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.ModuleElementImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getModuleElement()
     * @generated
     */
    EClass MODULE_ELEMENT = eINSTANCE.getModuleElement();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.QueryImpl <em>Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.QueryImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getQuery()
     * @generated
     */
    EClass QUERY = eINSTANCE.getQuery();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUERY__NAME = eINSTANCE.getQuery_Name();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__BODY = eINSTANCE.getQuery_Body();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OclLExpressionImpl <em>Ocl LExpression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OclLExpressionImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLExpression()
     * @generated
     */
    EClass OCL_LEXPRESSION = eINSTANCE.getOclLExpression();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OCL_LEXPRESSION__NAME = eINSTANCE.getOclLExpression_Name();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LEXPRESSION__VARIABLE = eINSTANCE.getOclLExpression_Variable();

    /**
     * The meta object literal for the '<em><b>In</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LEXPRESSION__IN = eINSTANCE.getOclLExpression_In();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LEXPRESSION__TARGET = eINSTANCE.getOclLExpression_Target();

    /**
     * The meta object literal for the '<em><b>Model</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LEXPRESSION__MODEL = eINSTANCE.getOclLExpression_Model();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OCL_LEXPRESSION__ELEMENTS = eINSTANCE.getOclLExpression_Elements();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.IteratorImpl <em>Iterator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.IteratorImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIterator()
     * @generated
     */
    EClass ITERATOR = eINSTANCE.getIterator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITERATOR__NAME = eINSTANCE.getIterator_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATOR__TYPE = eINSTANCE.getIterator_Type();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.LocalVariableImpl <em>Local Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.LocalVariableImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLocalVariable()
     * @generated
     */
    EClass LOCAL_VARIABLE = eINSTANCE.getLocalVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCAL_VARIABLE__NAME = eINSTANCE.getLocalVariable_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VARIABLE__TYPE = eINSTANCE.getLocalVariable_Type();

    /**
     * The meta object literal for the '<em><b>Init Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VARIABLE__INIT_EXP = eINSTANCE.getLocalVariable_InitExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.CollectionExpImpl <em>Collection Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.CollectionExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getCollectionExp()
     * @generated
     */
    EClass COLLECTION_EXP = eINSTANCE.getCollectionExp();

    /**
     * The meta object literal for the '<em><b>Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_EXP__PARTS = eINSTANCE.getCollectionExp_Parts();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.BagExpImpl <em>Bag Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.BagExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBagExp()
     * @generated
     */
    EClass BAG_EXP = eINSTANCE.getBagExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.SequenceExpImpl <em>Sequence Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.SequenceExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSequenceExp()
     * @generated
     */
    EClass SEQUENCE_EXP = eINSTANCE.getSequenceExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.SetExpImpl <em>Set Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.SetExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSetExp()
     * @generated
     */
    EClass SET_EXP = eINSTANCE.getSetExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OrderedSetExpImpl <em>Ordered Set Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OrderedSetExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOrderedSetExp()
     * @generated
     */
    EClass ORDERED_SET_EXP = eINSTANCE.getOrderedSetExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.MapExpImpl <em>Map Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.MapExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapExp()
     * @generated
     */
    EClass MAP_EXP = eINSTANCE.getMapExp();

    /**
     * The meta object literal for the '<em><b>Map Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_EXP__MAP_ELEMENTS = eINSTANCE.getMapExp_MapElements();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.MapElementImpl <em>Map Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.MapElementImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapElement()
     * @generated
     */
    EClass MAP_ELEMENT = eINSTANCE.getMapElement();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_ELEMENT__KEY = eINSTANCE.getMapElement_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_ELEMENT__VALUE = eINSTANCE.getMapElement_Value();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.TuplePartImpl <em>Tuple Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.TuplePartImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTuplePart()
     * @generated
     */
    EClass TUPLE_PART = eINSTANCE.getTuplePart();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TUPLE_PART__NAME = eINSTANCE.getTuplePart_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_PART__TYPE = eINSTANCE.getTuplePart_Type();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_PART__INIT = eINSTANCE.getTuplePart_Init();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.PrimitiveExpImpl <em>Primitive Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.PrimitiveExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getPrimitiveExp()
     * @generated
     */
    EClass PRIMITIVE_EXP = eINSTANCE.getPrimitiveExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.NumberLiteralExpImpl <em>Number Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.NumberLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNumberLiteralExp()
     * @generated
     */
    EClass NUMBER_LITERAL_EXP = eINSTANCE.getNumberLiteralExp();

    /**
     * The meta object literal for the '<em><b>Symbol</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_LITERAL_EXP__SYMBOL = eINSTANCE.getNumberLiteralExp_Symbol();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.StringLiteralExpImpl <em>String Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.StringLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getStringLiteralExp()
     * @generated
     */
    EClass STRING_LITERAL_EXP = eINSTANCE.getStringLiteralExp();

    /**
     * The meta object literal for the '<em><b>Segments</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_LITERAL_EXP__SEGMENTS = eINSTANCE.getStringLiteralExp_Segments();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.BooleanLiteralExpImpl <em>Boolean Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.BooleanLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBooleanLiteralExp()
     * @generated
     */
    EClass BOOLEAN_LITERAL_EXP = eINSTANCE.getBooleanLiteralExp();

    /**
     * The meta object literal for the '<em><b>Symbol</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_LITERAL_EXP__SYMBOL = eINSTANCE.getBooleanLiteralExp_Symbol();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.UnlimitedNaturalLiteralExpImpl <em>Unlimited Natural Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.UnlimitedNaturalLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getUnlimitedNaturalLiteralExp()
     * @generated
     */
    EClass UNLIMITED_NATURAL_LITERAL_EXP = eINSTANCE.getUnlimitedNaturalLiteralExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.InvalidLiteralExpImpl <em>Invalid Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.InvalidLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getInvalidLiteralExp()
     * @generated
     */
    EClass INVALID_LITERAL_EXP = eINSTANCE.getInvalidLiteralExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.NullLiteralExpImpl <em>Null Literal Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.NullLiteralExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNullLiteralExp()
     * @generated
     */
    EClass NULL_LITERAL_EXP = eINSTANCE.getNullLiteralExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.IfExpImpl <em>If Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.IfExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIfExp()
     * @generated
     */
    EClass IF_EXP = eINSTANCE.getIfExp();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP__CONDITION = eINSTANCE.getIfExp_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP__THEN = eINSTANCE.getIfExp_Then();

    /**
     * The meta object literal for the '<em><b>If Then</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP__IF_THEN = eINSTANCE.getIfExp_IfThen();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP__ELSE = eINSTANCE.getIfExp_Else();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OclLTypeImpl <em>Ocl LType</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OclLTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLType()
     * @generated
     */
    EClass OCL_LTYPE = eINSTANCE.getOclLType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OclLModelElementExpImpl <em>Ocl LModel Element Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OclLModelElementExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLModelElementExp()
     * @generated
     */
    EClass OCL_LMODEL_ELEMENT_EXP = eINSTANCE.getOclLModelElementExp();

    /**
     * The meta object literal for the '<em><b>Model</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OCL_LMODEL_ELEMENT_EXP__MODEL = eINSTANCE.getOclLModelElementExp_Model();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OCL_LMODEL_ELEMENT_EXP__NAME = eINSTANCE.getOclLModelElementExp_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.EnvTypeImpl <em>Env Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.EnvTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getEnvType()
     * @generated
     */
    EClass ENV_TYPE = eINSTANCE.getEnvType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENV_TYPE__NAME = eINSTANCE.getEnvType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.LambdaTypeImpl <em>Lambda Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.LambdaTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLambdaType()
     * @generated
     */
    EClass LAMBDA_TYPE = eINSTANCE.getLambdaType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LAMBDA_TYPE__NAME = eINSTANCE.getLambdaType_Name();

    /**
     * The meta object literal for the '<em><b>Args Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LAMBDA_TYPE__ARGS_TYPES = eINSTANCE.getLambdaType_ArgsTypes();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LAMBDA_TYPE__RETURN_TYPE = eINSTANCE.getLambdaType_ReturnType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.MapTypeImpl <em>Map Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.MapTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMapType()
     * @generated
     */
    EClass MAP_TYPE = eINSTANCE.getMapType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAP_TYPE__NAME = eINSTANCE.getMapType_Name();

    /**
     * The meta object literal for the '<em><b>Key Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_TYPE__KEY_TYPE = eINSTANCE.getMapType_KeyType();

    /**
     * The meta object literal for the '<em><b>Value Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_TYPE__VALUE_TYPE = eINSTANCE.getMapType_ValueType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.TupleTypeImpl <em>Tuple Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.TupleTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTupleType()
     * @generated
     */
    EClass TUPLE_TYPE = eINSTANCE.getTupleType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OclLAnyTypeImpl <em>Ocl LAny Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OclLAnyTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOclLAnyType()
     * @generated
     */
    EClass OCL_LANY_TYPE = eINSTANCE.getOclLAnyType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OCL_LANY_TYPE__NAME = eINSTANCE.getOclLAnyType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.SetTypeImpl <em>Set Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.SetTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSetType()
     * @generated
     */
    EClass SET_TYPE = eINSTANCE.getSetType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_TYPE__NAME = eINSTANCE.getSetType_Name();

    /**
     * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_TYPE__ELEMENT_TYPE = eINSTANCE.getSetType_ElementType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.SequenceTypeImpl <em>Sequence Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.SequenceTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSequenceType()
     * @generated
     */
    EClass SEQUENCE_TYPE = eINSTANCE.getSequenceType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SEQUENCE_TYPE__NAME = eINSTANCE.getSequenceType_Name();

    /**
     * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQUENCE_TYPE__ELEMENT_TYPE = eINSTANCE.getSequenceType_ElementType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OrderedSetTypeImpl <em>Ordered Set Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OrderedSetTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOrderedSetType()
     * @generated
     */
    EClass ORDERED_SET_TYPE = eINSTANCE.getOrderedSetType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ORDERED_SET_TYPE__NAME = eINSTANCE.getOrderedSetType_Name();

    /**
     * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDERED_SET_TYPE__ELEMENT_TYPE = eINSTANCE.getOrderedSetType_ElementType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.BagTypeImpl <em>Bag Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.BagTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBagType()
     * @generated
     */
    EClass BAG_TYPE = eINSTANCE.getBagType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BAG_TYPE__NAME = eINSTANCE.getBagType_Name();

    /**
     * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BAG_TYPE__ELEMENT_TYPE = eINSTANCE.getBagType_ElementType();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.RealTypeImpl <em>Real Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.RealTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getRealType()
     * @generated
     */
    EClass REAL_TYPE = eINSTANCE.getRealType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REAL_TYPE__NAME = eINSTANCE.getRealType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.IntegerTypeImpl <em>Integer Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.IntegerTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIntegerType()
     * @generated
     */
    EClass INTEGER_TYPE = eINSTANCE.getIntegerType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INTEGER_TYPE__NAME = eINSTANCE.getIntegerType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.BooleanTypeImpl <em>Boolean Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.BooleanTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBooleanType()
     * @generated
     */
    EClass BOOLEAN_TYPE = eINSTANCE.getBooleanType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_TYPE__NAME = eINSTANCE.getBooleanType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.StringTypeImpl <em>String Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.StringTypeImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getStringType()
     * @generated
     */
    EClass STRING_TYPE = eINSTANCE.getStringType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_TYPE__NAME = eINSTANCE.getStringType_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.BoolOpCallExpImpl <em>Bool Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.BoolOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getBoolOpCallExp()
     * @generated
     */
    EClass BOOL_OP_CALL_EXP = eINSTANCE.getBoolOpCallExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOL_OP_CALL_EXP__SOURCE = eINSTANCE.getBoolOpCallExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.EqOpCallExpImpl <em>Eq Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.EqOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getEqOpCallExp()
     * @generated
     */
    EClass EQ_OP_CALL_EXP = eINSTANCE.getEqOpCallExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQ_OP_CALL_EXP__SOURCE = eINSTANCE.getEqOpCallExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.ComOpCallExpImpl <em>Com Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.ComOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getComOpCallExp()
     * @generated
     */
    EClass COM_OP_CALL_EXP = eINSTANCE.getComOpCallExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COM_OP_CALL_EXP__SOURCE = eINSTANCE.getComOpCallExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.AddOpCallExpImpl <em>Add Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.AddOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getAddOpCallExp()
     * @generated
     */
    EClass ADD_OP_CALL_EXP = eINSTANCE.getAddOpCallExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OP_CALL_EXP__SOURCE = eINSTANCE.getAddOpCallExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.MulOpCallExpImpl <em>Mul Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.MulOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getMulOpCallExp()
     * @generated
     */
    EClass MUL_OP_CALL_EXP = eINSTANCE.getMulOpCallExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL_OP_CALL_EXP__SOURCE = eINSTANCE.getMulOpCallExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.NavigationExpImpl <em>Navigation Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.NavigationExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNavigationExp()
     * @generated
     */
    EClass NAVIGATION_EXP = eINSTANCE.getNavigationExp();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATION_EXP__SOURCE = eINSTANCE.getNavigationExp_Source();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.CollectionOpCallExpImpl <em>Collection Op Call Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.CollectionOpCallExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getCollectionOpCallExp()
     * @generated
     */
    EClass COLLECTION_OP_CALL_EXP = eINSTANCE.getCollectionOpCallExp();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_OP_CALL_EXP__ARGUMENTS = eINSTANCE.getCollectionOpCallExp_Arguments();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.IterateExpImpl <em>Iterate Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.IterateExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIterateExp()
     * @generated
     */
    EClass ITERATE_EXP = eINSTANCE.getIterateExp();

    /**
     * The meta object literal for the '<em><b>Iterators</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATE_EXP__ITERATORS = eINSTANCE.getIterateExp_Iterators();

    /**
     * The meta object literal for the '<em><b>Result</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATE_EXP__RESULT = eINSTANCE.getIterateExp_Result();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATE_EXP__BODY = eINSTANCE.getIterateExp_Body();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.IteratorExpImpl <em>Iterator Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.IteratorExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getIteratorExp()
     * @generated
     */
    EClass ITERATOR_EXP = eINSTANCE.getIteratorExp();

    /**
     * The meta object literal for the '<em><b>Iterators</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATOR_EXP__ITERATORS = eINSTANCE.getIteratorExp_Iterators();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITERATOR_EXP__BODY = eINSTANCE.getIteratorExp_Body();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.NavigationOrAttributeCallImpl <em>Navigation Or Attribute Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.NavigationOrAttributeCallImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNavigationOrAttributeCall()
     * @generated
     */
    EClass NAVIGATION_OR_ATTRIBUTE_CALL = eINSTANCE.getNavigationOrAttributeCall();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATION_OR_ATTRIBUTE_CALL__FEATURE = eINSTANCE.getNavigationOrAttributeCall_Feature();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.OperationCallImpl <em>Operation Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.OperationCallImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getOperationCall()
     * @generated
     */
    EClass OPERATION_CALL = eINSTANCE.getOperationCall();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CALL__ARGUMENTS = eINSTANCE.getOperationCall_Arguments();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.LambdaExpImpl <em>Lambda Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.LambdaExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getLambdaExp()
     * @generated
     */
    EClass LAMBDA_EXP = eINSTANCE.getLambdaExp();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LAMBDA_EXP__EXPRESSION = eINSTANCE.getLambdaExp_Expression();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.TupleExpImpl <em>Tuple Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.TupleExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getTupleExp()
     * @generated
     */
    EClass TUPLE_EXP = eINSTANCE.getTupleExp();

    /**
     * The meta object literal for the '<em><b>Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_EXP__PARTS = eINSTANCE.getTupleExp_Parts();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.ElseIfThenExpImpl <em>Else If Then Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.ElseIfThenExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getElseIfThenExp()
     * @generated
     */
    EClass ELSE_IF_THEN_EXP = eINSTANCE.getElseIfThenExp();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IF_THEN_EXP__CONDITION = eINSTANCE.getElseIfThenExp_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IF_THEN_EXP__THEN = eINSTANCE.getElseIfThenExp_Then();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.SelfExpImpl <em>Self Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.SelfExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getSelfExp()
     * @generated
     */
    EClass SELF_EXP = eINSTANCE.getSelfExp();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.oCLlite.impl.NestedExpImpl <em>Nested Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.oCLlite.impl.NestedExpImpl
     * @see fr.inria.diverse.oCLlite.impl.OCLlitePackageImpl#getNestedExp()
     * @generated
     */
    EClass NESTED_EXP = eINSTANCE.getNestedExp();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_EXP__EXP = eINSTANCE.getNestedExp_Exp();

  }

} //OCLlitePackage
